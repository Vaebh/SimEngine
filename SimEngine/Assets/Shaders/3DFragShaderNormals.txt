#version 150
in vec2 Texcoord;
in vec3 Normal;
in vec3 Position;

out vec4 outColor;

uniform sampler2D textureSprite;
uniform vec3 lightPos;
uniform vec3 camPos;

const float diffuseFactor  = 0.5;
const float ambientFactor  = 0.3;
const float specularFactor = 0.0;

void main()
{
	vec4 colTexture = texture(textureSprite, Texcoord);
	
	vec3 normalNormalized = normalize(Normal);
	vec3 lightDir  = normalize(lightPos - Position);

	float diffuseCosine   = clamp(dot(normalNormalized, lightDir), 0.0, 1.0);

	outColor.rgb  = vec3(0.0);
	outColor.rgb += vec3(colTexture.rgb * 0.1);
	outColor.rgb += vec3(colTexture.rgb * diffuseFactor * diffuseCosine);
	outColor.a = 1.0;
}